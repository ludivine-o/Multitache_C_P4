/*
 * timers.c
 *
 *  Created on: Apr 22, 2020
 *      Author: ludivineo
 */

#include <stdint.h>

#include "timers.h"
#include "fifo.h"


typedef struct {
	Status status;
	int8_t countdown;
	Owner owner;
}Timer;




Timer timers_table [TIMER_MAX];

//Fonction pour lancer un timer
void start_timer (int8_t timer_id, int8_t countdown, Owner owner){
	// mutex lock
	timers_table[timer_id].countdown = countdown;
	timers_table[timer_id].owner = owner;
	timers_table[timer_id].status = START;
	//mutex unlock
}


//thread qui gère l'incrémentation des timers :
void *timers(void*arg){
	data_msg msg_to_send;
	while(1){
		//mutex lock
		for (int i=0; i>TIMER_MAX; i++){
			if (timers_table[i].status == START){
				timers_table[i].countdown -= 1;
				if (timers_table[i].countdown == 0){
					msg_to_send.value[0] = trigger_TIMER;
					msg_to_send.value[1] = i;								//timer id
					msg_to_send.value[2] = timers_table[i].status;			//status
					if (timers_table[i].owner == Thrd_APP){
						SendMessage(LIST_READ, msg_to_send, sizeof(data_msg));
					}
					else if (timers_table[i].owner == Thrd_DISPLAY){
						SendMessage(LIST_DISPLAY, msg_to_send, sizeof(data_msg));
					}
					timers_table[i].status = STOP;

				}
			}
		}
		//mutex unlock
		usleep(10000);
	}
}





